!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BLACK	src/include/vga/vga.h	/^    BLACK = 0,$/;"	e	enum:__anon6
BLUE	src/include/vga/vga.h	/^    BLUE,$/;"	e	enum:__anon6
BROWN	src/include/vga/vga.h	/^    BROWN,$/;"	e	enum:__anon6
CFLAGS	src/mm/Makefile	/^CFLAGS := -Wall -nostdlib -nostdinc -fno-builtin$/;"	m
CHECKSUM	src/init/boot.asm	/^CHECKSUM equ -(MAGIC + FLAGS)   ; checksum of above, to prove we are multiboot$/;"	d
CHECK_FLAG	src/mm/frame.c	/^#define CHECK_FLAG(/;"	d	file:
CYAN	src/include/vga/vga.h	/^    CYAN,$/;"	e	enum:__anon6
D_GREY	src/include/vga/vga.h	/^    D_GREY,$/;"	e	enum:__anon6
FALSE	src/include/libc/types.h	/^#define FALSE	/;"	d
FLAGS	src/init/boot.asm	/^FLAGS    equ  MBALIGN | MEMINFO ; this is the Multiboot 'flag' field$/;"	d
FRAME_SIZE	src/mm/frame.c	/^#define FRAME_SIZE /;"	d	file:
GREEN	src/include/vga/vga.h	/^    GREEN,$/;"	e	enum:__anon6
LEFT	src/print/vsprintf.c	/^#define LEFT /;"	d	file:
L_BLUE	src/include/vga/vga.h	/^    L_BLUE,$/;"	e	enum:__anon6
L_BROWN	src/include/vga/vga.h	/^    L_BROWN,$/;"	e	enum:__anon6
L_CYAN	src/include/vga/vga.h	/^    L_CYAN,$/;"	e	enum:__anon6
L_GREEN	src/include/vga/vga.h	/^    L_GREEN,$/;"	e	enum:__anon6
L_GREY	src/include/vga/vga.h	/^    L_GREY,$/;"	e	enum:__anon6
L_MAG	src/include/vga/vga.h	/^    L_MAG,$/;"	e	enum:__anon6
L_RED	src/include/vga/vga.h	/^    L_RED,$/;"	e	enum:__anon6
MAGENTA	src/include/vga/vga.h	/^    MAGENTA,$/;"	e	enum:__anon6
MAGIC	src/init/boot.asm	/^MAGIC    equ  0x1BADB002        ; 'magic number' lets bootloader find the header$/;"	d
MBALIGN	src/init/boot.asm	/^MBALIGN  equ  1<<0              ; align loaded modules on page boundaries$/;"	d
MEMINFO	src/init/boot.asm	/^MEMINFO  equ  1<<1              ; provide memory map$/;"	d
MULTIBOOT_AOUT_KLUDGE	src/include/multiboot.h	/^#define MULTIBOOT_AOUT_KLUDGE /;"	d
MULTIBOOT_BOOTLOADER_MAGIC	src/include/multiboot.h	/^#define MULTIBOOT_BOOTLOADER_MAGIC /;"	d
MULTIBOOT_HEADER	src/include/multiboot.h	/^#define MULTIBOOT_HEADER /;"	d
MULTIBOOT_HEADER_MAGIC	src/include/multiboot.h	/^#define MULTIBOOT_HEADER_MAGIC /;"	d
MULTIBOOT_INFO_ALIGN	src/include/multiboot.h	/^#define MULTIBOOT_INFO_ALIGN /;"	d
MULTIBOOT_INFO_AOUT_SYMS	src/include/multiboot.h	/^#define MULTIBOOT_INFO_AOUT_SYMS /;"	d
MULTIBOOT_INFO_APM_TABLE	src/include/multiboot.h	/^#define MULTIBOOT_INFO_APM_TABLE /;"	d
MULTIBOOT_INFO_BOOTDEV	src/include/multiboot.h	/^#define MULTIBOOT_INFO_BOOTDEV /;"	d
MULTIBOOT_INFO_BOOT_LOADER_NAME	src/include/multiboot.h	/^#define MULTIBOOT_INFO_BOOT_LOADER_NAME /;"	d
MULTIBOOT_INFO_CMDLINE	src/include/multiboot.h	/^#define MULTIBOOT_INFO_CMDLINE /;"	d
MULTIBOOT_INFO_CONFIG_TABLE	src/include/multiboot.h	/^#define MULTIBOOT_INFO_CONFIG_TABLE /;"	d
MULTIBOOT_INFO_DRIVE_INFO	src/include/multiboot.h	/^#define MULTIBOOT_INFO_DRIVE_INFO /;"	d
MULTIBOOT_INFO_ELF_SHDR	src/include/multiboot.h	/^#define MULTIBOOT_INFO_ELF_SHDR /;"	d
MULTIBOOT_INFO_MEMORY	src/include/multiboot.h	/^#define MULTIBOOT_INFO_MEMORY /;"	d
MULTIBOOT_INFO_MEM_MAP	src/include/multiboot.h	/^#define MULTIBOOT_INFO_MEM_MAP /;"	d
MULTIBOOT_INFO_MODS	src/include/multiboot.h	/^#define MULTIBOOT_INFO_MODS /;"	d
MULTIBOOT_INFO_VIDEO_INFO	src/include/multiboot.h	/^#define MULTIBOOT_INFO_VIDEO_INFO /;"	d
MULTIBOOT_MEMORY_AVAILABLE	src/include/multiboot.h	/^#define MULTIBOOT_MEMORY_AVAILABLE /;"	d
MULTIBOOT_MEMORY_INFO	src/include/multiboot.h	/^#define MULTIBOOT_MEMORY_INFO /;"	d
MULTIBOOT_MEMORY_RESERVED	src/include/multiboot.h	/^#define MULTIBOOT_MEMORY_RESERVED /;"	d
MULTIBOOT_MOD_ALIGN	src/include/multiboot.h	/^#define MULTIBOOT_MOD_ALIGN /;"	d
MULTIBOOT_PAGE_ALIGN	src/include/multiboot.h	/^#define MULTIBOOT_PAGE_ALIGN /;"	d
MULTIBOOT_SEARCH	src/include/multiboot.h	/^#define MULTIBOOT_SEARCH /;"	d
MULTIBOOT_UNSUPPORTED	src/include/multiboot.h	/^#define MULTIBOOT_UNSUPPORTED /;"	d
MULTIBOOT_VIDEO_MODE	src/include/multiboot.h	/^#define MULTIBOOT_VIDEO_MODE /;"	d
NULL	src/include/libc/stddef.h	/^#define NULL	/;"	d
PAGE_SIZE	src/include/mm/mm.h	/^#define PAGE_SIZE /;"	d
PAGE_SIZE	src/include/mm/page.h	/^#define PAGE_SIZE /;"	d
PLUS	src/print/vsprintf.c	/^#define PLUS /;"	d	file:
RED	src/include/vga/vga.h	/^    RED,$/;"	e	enum:__anon6
SIGN	src/print/vsprintf.c	/^#define SIGN /;"	d	file:
SMALL	src/print/vsprintf.c	/^#define SMALL /;"	d	file:
SPACE	src/print/vsprintf.c	/^#define SPACE /;"	d	file:
SPECIAL	src/print/vsprintf.c	/^#define SPECIAL /;"	d	file:
TRUE	src/include/libc/types.h	/^#define TRUE	/;"	d
WHITE	src/include/vga/vga.h	/^    WHITE$/;"	e	enum:__anon6
ZEROPAD	src/print/vsprintf.c	/^#define ZEROPAD /;"	d	file:
__ERRNO_H__	src/include/libc/errno.h	/^#define __ERRNO_H__$/;"	d
__FRAME_H__	src/include/mm/frame.h	/^#define __FRAME_H__$/;"	d
__KERNEL_H__	src/include/kernel.h	/^#define __KERNEL_H__$/;"	d
__MM_H__	src/include/mm/mm.h	/^#define __MM_H__$/;"	d
__PAGE_H__	src/include/mm/page.h	/^#define __PAGE_H__$/;"	d
__STDDEF_H__	src/include/libc/stddef.h	/^#define __STDDEF_H__$/;"	d
__STRING_H__	src/include/libc/string.h	/^#define __STRING_H__$/;"	d
__TYPES_H__	src/include/libc/types.h	/^#define __TYPES_H__$/;"	d
_frame_map	src/mm/frame.c	/^static uint32_t *_frame_map = 0;$/;"	v	file:
_max_frames	src/mm/frame.c	/^static uint32_t _max_frames = 0;$/;"	v	file:
_mbi	src/init/main.c	/^static struct multiboot_info *_mbi;$/;"	v	typeref:struct:multiboot_info	file:
_pages	src/mm/page.c	/^static uint32_t *_pages;$/;"	v	file:
_pd	src/mm/frame.c	/^static page_dir_t *_pd = (page_dir_t *)0xfffff000;$/;"	v	file:
_placement_addr	src/mm/frame.c	/^static ptr_t _placement_addr;$/;"	v	file:
_placement_addr	src/mm/page.c	/^static phys_addr_t _placement_addr;$/;"	v	file:
_start	src/init/boot.asm	/^_start:$/;"	l
_total_memory_size	src/mm/frame.c	/^static uint32_t _total_memory_size = 0;$/;"	v	file:
_total_pages	src/mm/page.c	/^static uint64_t _total_pages;$/;"	v	file:
_used_frames	src/mm/frame.c	/^static uint32_t _used_frames = 0;$/;"	v	file:
accessed	src/include/mm/frame.h	/^    unsigned int accessed : 1;$/;"	m	struct:__anon1
accessed	src/include/mm/frame.h	/^    unsigned int accessed : 1;$/;"	m	struct:__anon2
addr	src/include/mm/frame.h	/^    unsigned int addr : 20;$/;"	m	struct:__anon1
addr	src/include/mm/frame.h	/^    unsigned int addr : 20;$/;"	m	struct:__anon2
addr	src/include/multiboot.h	/^    multiboot_uint32_t addr;$/;"	m	struct:multiboot_aout_symbol_table
addr	src/include/multiboot.h	/^    multiboot_uint32_t addr;$/;"	m	struct:multiboot_elf_section_header_table
addr	src/include/multiboot.h	/^    multiboot_uint64_t addr;$/;"	m	struct:multiboot_mmap_entry
alloc_frame	src/mm/frame.c	/^ptr_t alloc_frame() {$/;"	f
aout_sym	src/include/multiboot.h	/^        multiboot_aout_symbol_table_t aout_sym;$/;"	m	union:multiboot_info::__anon5
apm_table	src/include/multiboot.h	/^    multiboot_uint32_t apm_table;$/;"	m	struct:multiboot_info
bg	src/include/vga/vga.h	/^    char bg : 4;$/;"	m	struct:vga_char
bitmap_set	src/mm/frame.c	/^inline void bitmap_set(int bit) { _frame_map[bit \/ 32] |= (1 << (bit % 32)); }$/;"	f
bitmap_test	src/mm/frame.c	/^inline int bitmap_test(int bit) { return _frame_map[bit \/ 32] & (1 << (bit % 32)); }$/;"	f
bitmap_unset	src/mm/frame.c	/^inline void bitmap_unset(int bit) { _frame_map[bit \/ 32] &= ~(1 << (bit % 32)); }$/;"	f
blank	src/vga/vga.c	/^static vga_char blank;$/;"	v	file:
bool_t	src/include/libc/types.h	/^typedef int bool_t;$/;"	t
boolean_t	src/include/libc/types.h	/^typedef char boolean_t;$/;"	t
boot_device	src/include/multiboot.h	/^    multiboot_uint32_t boot_device;$/;"	m	struct:multiboot_info
boot_loader_name	src/include/multiboot.h	/^    multiboot_uint32_t boot_loader_name;$/;"	m	struct:multiboot_info
bss_end_addr	src/include/multiboot.h	/^    multiboot_uint32_t bss_end_addr;$/;"	m	struct:multiboot_header
buf	src/print/printk.c	/^static char buf[1024];$/;"	v	file:
cache_disabled	src/include/mm/frame.h	/^    unsigned int cache_disabled : 1;$/;"	m	struct:__anon1
cache_disabled	src/include/mm/frame.h	/^    unsigned int cache_disabled : 1;$/;"	m	struct:__anon2
ch	src/include/vga/vga.h	/^    char ch : 8;$/;"	m	struct:vga_char
checksum	src/include/multiboot.h	/^    multiboot_uint32_t checksum;$/;"	m	struct:multiboot_header
clear_screen	src/vga/vga.c	/^void clear_screen() {$/;"	f
cmdline	src/include/multiboot.h	/^    multiboot_uint32_t cmdline;$/;"	m	struct:multiboot_info
cmdline	src/include/multiboot.h	/^    multiboot_uint32_t cmdline;$/;"	m	struct:multiboot_mod_list
config_table	src/include/multiboot.h	/^    multiboot_uint32_t config_table;$/;"	m	struct:multiboot_info
depth	src/include/multiboot.h	/^    multiboot_uint32_t depth;$/;"	m	struct:multiboot_header
dev_t	src/include/libc/types.h	/^typedef uint32_t dev_t;$/;"	t
dirty	src/include/mm/frame.h	/^    unsigned int dirty : 1;$/;"	m	struct:__anon2
do_div	src/print/vsprintf.c	/^#define do_div(/;"	d	file:
drives_addr	src/include/multiboot.h	/^    multiboot_uint32_t drives_addr;$/;"	m	struct:multiboot_info
drives_length	src/include/multiboot.h	/^    multiboot_uint32_t drives_length;$/;"	m	struct:multiboot_info
elf_sec	src/include/multiboot.h	/^        multiboot_elf_section_header_table_t elf_sec;$/;"	m	union:multiboot_info::__anon5
enable_paging	src/init/boot.asm	/^enable_paging:$/;"	l
entry_addr	src/include/multiboot.h	/^    multiboot_uint32_t entry_addr;$/;"	m	struct:multiboot_header
fg	src/include/vga/vga.h	/^    char fg : 4;$/;"	m	struct:vga_char
flags	src/include/multiboot.h	/^    multiboot_uint32_t flags;$/;"	m	struct:multiboot_header
flags	src/include/multiboot.h	/^    multiboot_uint32_t flags;$/;"	m	struct:multiboot_info
frame_init	src/mm/frame.c	/^void frame_init(struct multiboot_info *mbi) {$/;"	f
fsblkcnt_t	src/include/libc/types.h	/^typedef uint64_t fsblkcnt_t;$/;"	t
fsfilcnt_t	src/include/libc/types.h	/^typedef uint64_t fsfilcnt_t;$/;"	t
get_first_frame	src/mm/frame.c	/^int get_first_frame() {$/;"	f
get_frame_count	src/mm/frame.c	/^static inline uint32_t get_frame_count() { return _max_frames; }$/;"	f	file:
get_free_page	src/mm/memory.c	/^unsigned long get_free_page(void){$/;"	f
get_physaddr	src/mm/frame.c	/^ptr_t get_physaddr(ptr_t virtualaddr) {$/;"	f
gid_t	src/include/libc/types.h	/^typedef uint32_t gid_t;$/;"	t
global	src/include/mm/frame.h	/^    unsigned int global : 1;$/;"	m	struct:__anon2
global	src/init/boot.asm	/^global _start:function (_start.end - _start)$/;"	l
header_addr	src/include/multiboot.h	/^    multiboot_uint32_t header_addr;$/;"	m	struct:multiboot_header
height	src/include/multiboot.h	/^    multiboot_uint32_t height;$/;"	m	struct:multiboot_header
ino_t	src/include/libc/types.h	/^typedef uint32_t ino_t;$/;"	t
ino_t	src/include/libc/types.h	/^typedef uint64_t ino_t;$/;"	t
int16_t	src/include/libc/types.h	/^typedef short int16_t;$/;"	t
int32_t	src/include/libc/types.h	/^typedef int int32_t;$/;"	t
int64_t	src/include/libc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	src/include/libc/types.h	/^typedef char int8_t;$/;"	t
is_digit	src/print/vsprintf.c	/^#define is_digit(/;"	d	file:
kmain	src/init/main.c	/^void kmain(unsigned long addr) {$/;"	f
kmalloc	src/mm/memory.c	/^ptr_t kmalloc(size_t size){$/;"	f
len	src/include/multiboot.h	/^    multiboot_uint64_t len;$/;"	m	struct:multiboot_mmap_entry
load_addr	src/include/multiboot.h	/^    multiboot_uint32_t load_addr;$/;"	m	struct:multiboot_header
load_end_addr	src/include/multiboot.h	/^    multiboot_uint32_t load_end_addr;$/;"	m	struct:multiboot_header
magic	src/include/multiboot.h	/^    multiboot_uint32_t magic;$/;"	m	struct:multiboot_header
mem_lower	src/include/multiboot.h	/^    multiboot_uint32_t mem_lower;$/;"	m	struct:multiboot_info
mem_upper	src/include/multiboot.h	/^    multiboot_uint32_t mem_upper;$/;"	m	struct:multiboot_info
memcmp	src/libc/string.c	/^int memcmp(const void *s1, const void *s2, size_t count)$/;"	f
memcpy	src/libc/string.c	/^void *memcpy(void *dst, const void *src, size_t count)$/;"	f
memory_region_deinit	src/mm/frame.c	/^void memory_region_deinit(ptr_t base, size_t size) {$/;"	f
memory_region_init	src/mm/frame.c	/^void memory_region_init(ptr_t base, size_t size) {$/;"	f
memset	src/libc/string.c	/^void *memset(void *dst, char val, size_t count)$/;"	f
mmap_addr	src/include/multiboot.h	/^    multiboot_uint32_t mmap_addr;$/;"	m	struct:multiboot_info
mmap_length	src/include/multiboot.h	/^    multiboot_uint32_t mmap_length;$/;"	m	struct:multiboot_info
mod_end	src/include/multiboot.h	/^    multiboot_uint32_t mod_end;$/;"	m	struct:multiboot_mod_list
mod_start	src/include/multiboot.h	/^    multiboot_uint32_t mod_start;$/;"	m	struct:multiboot_mod_list
mode_t	src/include/libc/types.h	/^typedef uint32_t mode_t;$/;"	t
mode_type	src/include/multiboot.h	/^    multiboot_uint32_t mode_type;$/;"	m	struct:multiboot_header
mods_addr	src/include/multiboot.h	/^    multiboot_uint32_t mods_addr;$/;"	m	struct:multiboot_info
mods_count	src/include/multiboot.h	/^    multiboot_uint32_t mods_count;$/;"	m	struct:multiboot_info
multiboot_aout_symbol_table	src/include/multiboot.h	/^struct multiboot_aout_symbol_table {$/;"	s
multiboot_aout_symbol_table_t	src/include/multiboot.h	/^typedef struct multiboot_aout_symbol_table multiboot_aout_symbol_table_t;$/;"	t	typeref:struct:multiboot_aout_symbol_table
multiboot_elf_section_header_table	src/include/multiboot.h	/^struct multiboot_elf_section_header_table {$/;"	s
multiboot_elf_section_header_table_t	src/include/multiboot.h	/^typedef struct multiboot_elf_section_header_table multiboot_elf_section_header_table_t;$/;"	t	typeref:struct:multiboot_elf_section_header_table
multiboot_header	src/include/multiboot.h	/^struct multiboot_header {$/;"	s
multiboot_info	src/include/multiboot.h	/^struct multiboot_info {$/;"	s
multiboot_info_t	src/include/multiboot.h	/^typedef struct multiboot_info multiboot_info_t;$/;"	t	typeref:struct:multiboot_info
multiboot_memory_map_t	src/include/multiboot.h	/^typedef struct multiboot_mmap_entry multiboot_memory_map_t;$/;"	t	typeref:struct:multiboot_mmap_entry
multiboot_mmap_entry	src/include/multiboot.h	/^struct multiboot_mmap_entry {$/;"	s
multiboot_mod_list	src/include/multiboot.h	/^struct multiboot_mod_list {$/;"	s
multiboot_module_t	src/include/multiboot.h	/^typedef struct multiboot_mod_list multiboot_module_t;$/;"	t	typeref:struct:multiboot_mod_list
multiboot_uint16_t	src/include/multiboot.h	/^typedef unsigned short multiboot_uint16_t;$/;"	t
multiboot_uint32_t	src/include/multiboot.h	/^typedef unsigned int multiboot_uint32_t;$/;"	t
multiboot_uint64_t	src/include/multiboot.h	/^typedef unsigned long long multiboot_uint64_t;$/;"	t
nlink_t	src/include/libc/types.h	/^typedef uint32_t nlink_t;$/;"	t
num	src/include/multiboot.h	/^    multiboot_uint32_t num;$/;"	m	struct:multiboot_elf_section_header_table
number	src/print/vsprintf.c	/^static char *number(char *str, int num, int base, int size, int precision, int type) {$/;"	f	file:
obj_dir	src/init/Makefile	/^obj_dir := ..\/..\/build\/objs$/;"	m
obj_dir	src/libc/Makefile	/^obj_dir := ..\/..\/build\/objs$/;"	m
obj_dir	src/mm/Makefile	/^obj_dir := ..\/..\/build\/objs$/;"	m
obj_dir	src/print/Makefile	/^obj_dir := ..\/..\/build\/objs$/;"	m
obj_dir	src/vga/Makefile	/^obj_dir := ..\/..\/build\/objs$/;"	m
offsetof	src/include/libc/stddef.h	/^#define offsetof(/;"	d
pad	src/include/multiboot.h	/^    multiboot_uint32_t pad;$/;"	m	struct:multiboot_mod_list
page_dir_t	src/include/mm/frame.h	/^typedef struct { page_tabl_refer_t tabls[1024]; } page_dir_t;$/;"	t	typeref:struct:__anon3
page_early_alloc	src/mm/page.c	/^static void page_early_alloc(phys_addr_t *phys, size_t size, int align) {$/;"	f	file:
page_init	src/mm/page.c	/^void page_init(struct multiboot_info *mbi) {$/;"	f
page_t	src/include/mm/frame.h	/^} page_t;$/;"	t	typeref:struct:__anon2
page_tabl_refer_t	src/include/mm/frame.h	/^} page_tabl_refer_t;$/;"	t	typeref:struct:__anon1
page_tabl_t	src/include/mm/frame.h	/^typedef struct { page_t pages[1024]; } page_tabl_t;$/;"	t	typeref:struct:__anon4
pagedir	src/init/boot.asm	/^pagedir:$/;"	l
pages	src/include/mm/frame.h	/^typedef struct { page_t pages[1024]; } page_tabl_t;$/;"	m	struct:__anon4
pagetabl	src/init/boot.asm	/^pagetabl:$/;"	l
phys_addr_t	src/include/libc/types.h	/^typedef uint32_t phys_addr_t;$/;"	t
phys_size_t	src/include/libc/types.h	/^typedef uint32_t phys_size_t;$/;"	t
pid_t	src/include/libc/types.h	/^typedef int pid_t;$/;"	t
pre_alloc	src/mm/frame.c	/^static ptr_t pre_alloc(size_t size) {$/;"	f	file:
present	src/include/mm/frame.h	/^    unsigned int present : 1;$/;"	m	struct:__anon1
present	src/include/mm/frame.h	/^    unsigned int present : 1;$/;"	m	struct:__anon2
printc	src/vga/vga.c	/^void printc(char c) {$/;"	f
printk	src/print/printk.c	/^int printk(const char *fmt, ...)$/;"	f
println	src/vga/vga.c	/^void println(char* s) {$/;"	f
ptr_t	src/include/libc/types.h	/^typedef unsigned long ptr_t;$/;"	t
resb	src/init/boot.asm	/^resb 16384 ; 16 KiB$/;"	l
reserved	src/include/multiboot.h	/^    multiboot_uint32_t reserved;$/;"	m	struct:multiboot_aout_symbol_table
rw	src/include/mm/frame.h	/^    unsigned int rw : 1;$/;"	m	struct:__anon1
rw	src/include/mm/frame.h	/^    unsigned int rw : 1;$/;"	m	struct:__anon2
section	src/init/boot.asm	/^section .bss$/;"	l
section	src/init/boot.asm	/^section .multiboot$/;"	l
section	src/init/boot.asm	/^section .text$/;"	l
setup_pages	src/init/boot.asm	/^setup_pages:$/;"	l
shndx	src/include/multiboot.h	/^    multiboot_uint32_t shndx;$/;"	m	struct:multiboot_elf_section_header_table
size	src/include/mm/frame.h	/^    unsigned int size : 1;$/;"	m	struct:__anon1
size	src/include/multiboot.h	/^    multiboot_uint32_t size;$/;"	m	struct:multiboot_elf_section_header_table
size	src/include/multiboot.h	/^    multiboot_uint32_t size;$/;"	m	struct:multiboot_mmap_entry
size_t	src/include/libc/stddef.h	/^typedef unsigned size_t;$/;"	t
size_t	src/include/libc/types.h	/^typedef unsigned int size_t;$/;"	t
skip_atoi	src/print/vsprintf.c	/^static int skip_atoi(const char **s) {$/;"	f	file:
stack_bottom	src/init/boot.asm	/^stack_bottom:$/;"	l
stack_top	src/init/boot.asm	/^stack_top:$/;"	l
strcat	src/libc/string.c	/^char *strcat(char *dst, const char *src)$/;"	f
strchr	src/libc/string.c	/^char *strchr(const char *str, int ch)$/;"	f
strcmp	src/libc/string.c	/^int strcmp(const char *str1, const char *str2)$/;"	f
strcpy	src/libc/string.c	/^char *strcpy(char *dst, const char *src)$/;"	f
strlen	src/libc/string.c	/^size_t strlen(const char *str)$/;"	f
strncat	src/libc/string.c	/^char *strncat(char *dst, const char *src, size_t num)$/;"	f
strncmp	src/libc/string.c	/^int strncmp(const char *str1, const char *str2, size_t num)$/;"	f
strncpy	src/libc/string.c	/^char *strncpy(char *dst, const char *src, size_t num)$/;"	f
strnlen	src/libc/string.c	/^size_t strnlen(const char *str, size_t num)$/;"	f
strsize	src/include/multiboot.h	/^    multiboot_uint32_t strsize;$/;"	m	struct:multiboot_aout_symbol_table
tabls	src/include/mm/frame.h	/^typedef struct { page_tabl_refer_t tabls[1024]; } page_dir_t;$/;"	m	struct:__anon3
tabsize	src/include/multiboot.h	/^    multiboot_uint32_t tabsize;$/;"	m	struct:multiboot_aout_symbol_table
target	src/init/Makefile	/^target := $(obj_dir)\/main.o $(obj_dir)\/boot.o$/;"	m
target	src/libc/Makefile	/^target := $(obj_dir)\/string.o$/;"	m
target	src/mm/Makefile	/^target := $(obj_dir)\/page.o $(obj_dir)\/frame.o$/;"	m
target	src/print/Makefile	/^target := $(obj_dir)\/printk.o $(obj_dir)\/vsprintf.o$/;"	m
target	src/vga/Makefile	/^target := $(obj_dir)\/vga.o$/;"	m
tid_t	src/include/libc/types.h	/^typedef int tid_t;$/;"	t
type	src/include/multiboot.h	/^    multiboot_uint32_t type;$/;"	m	struct:multiboot_mmap_entry
u	src/include/multiboot.h	/^    } u;$/;"	m	struct:multiboot_info	typeref:union:multiboot_info::__anon5
u_char	src/include/libc/types.h	/^typedef unsigned char u_char;$/;"	t
u_long	src/include/libc/types.h	/^typedef unsigned long u_long;$/;"	t
uid_t	src/include/libc/types.h	/^typedef uint32_t uid_t;$/;"	t
uint16_t	src/include/libc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	src/include/libc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	src/include/libc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	src/include/libc/types.h	/^typedef unsigned char uint8_t;$/;"	t
unused	src/include/mm/frame.h	/^    unsigned int unused : 4;$/;"	m	struct:__anon2
unused	src/include/mm/frame.h	/^    unsigned int unused : 5;$/;"	m	struct:__anon1
update_cursor	src/vga/vga.c	/^static void update_cursor() {$/;"	f	file:
useconds_t	src/include/libc/types.h	/^typedef int64_t useconds_t;$/;"	t
user	src/include/mm/frame.h	/^    unsigned int user : 1;$/;"	m	struct:__anon1
user	src/include/mm/frame.h	/^    unsigned int user : 1;$/;"	m	struct:__anon2
vbe_control_info	src/include/multiboot.h	/^    multiboot_uint32_t vbe_control_info;$/;"	m	struct:multiboot_info
vbe_interface_len	src/include/multiboot.h	/^    multiboot_uint16_t vbe_interface_len;$/;"	m	struct:multiboot_info
vbe_interface_off	src/include/multiboot.h	/^    multiboot_uint16_t vbe_interface_off;$/;"	m	struct:multiboot_info
vbe_interface_seg	src/include/multiboot.h	/^    multiboot_uint16_t vbe_interface_seg;$/;"	m	struct:multiboot_info
vbe_mode	src/include/multiboot.h	/^    multiboot_uint16_t vbe_mode;$/;"	m	struct:multiboot_info
vbe_mode_info	src/include/multiboot.h	/^    multiboot_uint32_t vbe_mode_info;$/;"	m	struct:multiboot_info
vga_buffer	src/vga/vga.c	/^static vga_char* vga_buffer;$/;"	v	file:
vga_char	src/include/vga/vga.h	/^struct vga_char {$/;"	s
vga_char	src/vga/vga.c	/^typedef struct vga_char vga_char;$/;"	t	typeref:struct:vga_char	file:
vga_color	src/include/vga/vga.h	/^} vga_color;$/;"	t	typeref:enum:__anon6
vga_init	src/vga/vga.c	/^void vga_init() {$/;"	f
vsprintf	src/print/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args) {$/;"	f
width	src/include/multiboot.h	/^    multiboot_uint32_t width;$/;"	m	struct:multiboot_header
write_through	src/include/mm/frame.h	/^    unsigned int write_through : 1;$/;"	m	struct:__anon1
write_through	src/include/mm/frame.h	/^    unsigned int write_through : 1;$/;"	m	struct:__anon2
x	src/vga/vga.c	/^static int x;$/;"	v	file:
y	src/vga/vga.c	/^static int y;$/;"	v	file:
